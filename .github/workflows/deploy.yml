name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 올린 파일들 불러오기
        uses: actions/checkout@v4

      - name: JDK 17버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: application.yml 파일 만들기
        run: echo "$APPLICATION_PROPERTIES" > ./src/main/resources/application.yml

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build

      - name: 빌드된 파일 이름 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar

      - name: 압축하기
        run: tar -czvf $GITHUB_SHA.tar.gz project.jar appspec.yml scripts

      - name: AWS Resource 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
           aws-region: ap-northeast-2
           aws-access-key-id: ${{ secrets.AWS_ACCES_KEY_ID }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: S3에 프로젝트 폴더 업로드
        # study-server s3 버켓으로 복사(cp)
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://study-server/$GITHUB_SHA.tar.gz

      - name: Code Deploy 활용하여 EC2에 프로젝트 코드 배포
        run: |
          aws deploy create-deployment
          
          # CodeDeploy 애플리케이션 이름 
          --application.name study-server
          
          # CodeDeploy 배포 구성 
          --deployment-config-name CodeDeployDefault.AllAtOnce
          
          # CodeDeploy 배포 그룹 이름 
          --deployment-group-name Production
          
          # S3 버켓 이름,파일 이름 
          --s3-location bucket=study-server,bundleType=tgz,key=$GITHUB_SHA.tar.gz